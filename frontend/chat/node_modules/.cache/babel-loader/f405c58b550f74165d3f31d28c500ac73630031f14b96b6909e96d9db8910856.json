{"ast":null,"code":"var _jsxFileName = \"/Users/pujaagarwal/chat-app/frontend/chat/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { nanoid } from 'nanoid';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:8000\");\nconst userName = nanoid(4);\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState([]);\n  let videoRef = useRef(null);\n  const sendChat = e => {\n    e.preventDefault();\n    socket.emit(\"chat\", {\n      message,\n      user: userName\n    });\n    setMessage('');\n  };\n  useEffect(() => {\n    socket.on(\"chat\", payload => {\n      setChat([...chat, payload]);\n    });\n  });\n  const audioVideoStream = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      let videoStream = videoRef.current;\n      videoStream.srcObject = stream;\n      socket.emit(\"send-stream\", {\n        stream\n      });\n    }).catch(err => {\n      console.log(\"error\", err);\n    });\n  };\n  useEffect(() => {\n    audioVideoStream();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"cht app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), chat.map((payload, index) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"id:\", payload.user, \" \\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 28\n          }, this), payload.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendChat,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"chat\",\n          placeholder: \"send msg\",\n          value: message,\n          onChange: e => {\n            setMessage(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        ref: videoRef,\n        height: 300,\n        width: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"U7RoBGD+hP/KhJiKdnhN8KiZw0k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","io","nanoid","socket","connect","userName","App","message","setMessage","chat","setChat","videoRef","sendChat","e","preventDefault","emit","user","on","payload","audioVideoStream","navigator","mediaDevices","getUserMedia","video","audio","then","stream","videoStream","current","srcObject","catch","err","console","log","map","index","target","value"],"sources":["/Users/pujaagarwal/chat-app/frontend/chat/src/App.js"],"sourcesContent":["import {useState, useEffect, useRef} from 'react';\nimport io from 'socket.io-client';\nimport {nanoid} from 'nanoid';\nimport './App.css';\n\nconst socket=io.connect(\"http://localhost:8000\");\nconst userName=nanoid(4);\n\nfunction App() {\n\n  const [message,setMessage] =useState('');\n  const [chat,setChat] =useState([]);\n  let videoRef = useRef(null);\n\n  const sendChat=(e)=>{\n   e.preventDefault();\n   socket.emit(\"chat\",{message,user:userName})\n   setMessage('')\n  }\n  \n  useEffect(()=>{\n    socket.on(\"chat\",(payload)=>{\n       setChat([...chat,payload])\n    })\n  })\n\n  const audioVideoStream = () => {\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        let videoStream = videoRef.current;\n        videoStream.srcObject = stream;\n        socket.emit(\"send-stream\", { stream });\n      })\n      .catch((err) => {\n        console.log(\"error\", err);\n      });\n  };\n\n  useEffect(() => {\n    audioVideoStream();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <h1>cht app</h1>\n      {\n        chat.map((payload,index)=>{\n          return(\n            <p key={index}><span>id:{payload.user} &nbsp;</span>{payload.message}</p>\n          )\n        })\n      }\n      <form onSubmit={sendChat} >\n        <input type=\"text\" name=\"chat\" placeholder=\"send msg\" value={message} onChange={(e)=>{\n          setMessage(e.target.value)\n        }}/>\n        <button type='submit'>Send</button>\n      </form>\n      <video autoPlay={true} ref={videoRef} height={300} width={300}></video>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}